{"version":3,"sources":["components/UI/WhoopsiesHeader.js","components/ViewModels/DashboardPageViewModel.js","components/UI/TaskCreation.js","components/UI/TaskCard.js","components/UI/TaskList.js","components/Views/DashboardPageView.js","App.js","reportWebVitals.js","index.js"],"names":["WhoopsiesHeader","Button","variant","color","startIcon","href","target","rel","DashboardPageViewModel","useState","name","setName","priority","setPriority","release","setRelease","id","Math","random","floor","toString","tasks","setTasks","addTask","e","preventDefault","newList","push","TaskCreation","textStyles","marginRight","onSubmit","TextField","label","size","value","onChange","style","type","disabled","defaultProps","TaskCard","Card","margin","TaskList","header","fullHeader","length","borderRadius","backgroundColor","padding","map","task","DashboardPageView","viewModel","HEADERS","Grid","container","direction","justify","alignItems","spacing","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e3e1269.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Assignment from \"@material-ui/icons/Assignment\";\n\nexport default function WhoopsiesHeader() {\n  return (\n    <>\n      <h1>Whoopsies!</h1>\n      <p>\n        {\"An Issue Tracker for all your Oopsies! \"}\n        <Button variant=\"outlined\" color=\"primary\" startIcon={<Assignment />}>\n          <a\n            href=\"https://docs.google.com/document/d/1FgaHyxg0d-MKl4OlfG0u36fmp6jM5nZxvI3ZeXUq4vs/edit?usp=sharing\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            SRS\n          </a>\n        </Button>\n      </p>\n    </>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function DashboardPageViewModel() {\n  const [name, setName] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n  const [release, setRelease] = useState(\"\");\n  const [tasks, setTasks] = useState([\n    {\n      id: 1 + Math.random(),\n      name: \"dummy task 1\",\n      priority: Math.floor(100 * Math.random()).toString(),\n      release: \"12/12/2021\",\n    },\n  ]);\n\n  const addTask = (e) => {\n    e.preventDefault();\n\n    const newList = [...tasks];\n\n    newList.push({\n      id: 1 + Math.random(),\n      name,\n      priority,\n      release,\n    });\n\n    setTasks(newList);\n    setName(\"\");\n    setPriority(\"\");\n    setRelease(\"\");\n  };\n\n  return {\n    name,\n    setName,\n    priority,\n    setPriority,\n    release,\n    setRelease,\n    tasks,\n    addTask,\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function TaskCreation({\n  name,\n  setName,\n  priority,\n  setPriority,\n  release,\n  setRelease,\n  addTask,\n}) {\n  const textStyles = { marginRight: \"1em\" };\n\n  return (\n    <form onSubmit={addTask}>\n      <TextField\n        label=\"Name\"\n        variant=\"filled\"\n        size=\"small\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        style={textStyles}\n      />\n      <TextField\n        label=\"Priority\"\n        variant=\"filled\"\n        size=\"small\"\n        value={priority}\n        onChange={(e) => setPriority(e.target.value)}\n        style={textStyles}\n      />\n      <TextField\n        label=\"Release\"\n        variant=\"filled\"\n        size=\"small\"\n        value={release}\n        onChange={(e) => setRelease(e.target.value)}\n        style={textStyles}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        size=\"large\"\n        disabled={!name}\n      >\n        Create\n      </Button>\n    </form>\n  );\n}\n\nTaskCreation.propTypes = {\n  name: PropTypes.string,\n  setName: PropTypes.func,\n  priority: PropTypes.string,\n  setPriority: PropTypes.func,\n  release: PropTypes.string,\n  setRelease: PropTypes.func,\n  addTask: PropTypes.func,\n};\n\nTaskCreation.defaultProps = {\n  name: \"TBD\",\n  setName: () => {},\n  priority: \"\",\n  setPriority: () => {},\n  release: \"TBD\",\n  setRelease: () => {},\n  addTask: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\n\nexport default function TaskCard({ name, priority, release }) {\n  const cardStyles = { margin: \"5px 0px\" };\n\n  return (\n    <Card variant=\"outlined\" style={cardStyles}>\n      {\"Name: \"}\n      {name}\n      <br />\n      {\"Priority: \"}\n      {priority}\n      <br />\n      {\"Release Date: \"}\n      {release}\n    </Card>\n  );\n}\n\nTaskCard.propTypes = {\n  name: PropTypes.string,\n  priority: PropTypes.string,\n  release: PropTypes.string,\n};\n\nTaskCard.defaultProps = {\n  name: \"TBD\",\n  priority: \"\",\n  release: \"TBD\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TaskCard from \"./TaskCard\";\n\nexport default function TaskList({ header, tasks }) {\n  const fullHeader = `${header} (${tasks.length})`;\n  const listStyles = {\n    borderRadius: \"4px\",\n    backgroundColor: \"lightgray\",\n    padding: \"1px 5px 1px 5px\",\n  };\n\n  return (\n    <div style={listStyles}>\n      <b>{fullHeader}</b>\n      {tasks.map((task) => (\n        <TaskCard\n          key={task.id}\n          name={task.name}\n          priority={task.priority}\n          release={task.release}\n        />\n      ))}\n    </div>\n  );\n}\n\nTaskList.propTypes = {\n  header: PropTypes.string,\n  tasks: PropTypes.arrayOf(PropTypes.object),\n};\n\nTaskList.defaultProps = {\n  header: \"TITLE NEEDED\",\n  tasks: [\n    {\n      id: 1 + Math.random(),\n      name: \"TBD\",\n      priority: \"\",\n      release: \"TBD\",\n    },\n  ],\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TaskCreation from \"../UI/TaskCreation\";\nimport TaskList from \"../UI/TaskList\";\n\nexport default function DashboardPageView({ viewModel }) {\n  const gridStyles = { margin: \"0px\" };\n  const HEADERS = {\n    TO_DO_HEADER: \"TO DO\",\n    IN_ANALYSIS_HEADER: \"IN ANALYSIS\",\n    IN_DEVELOPMENT_HEADER: \"IN DEVELOPMENT\",\n    IN_TESTING_HEADER: \"IN TESTING\",\n    DONE_HEADER: \"DONE\",\n  };\n\n  return (\n    <>\n      <TaskCreation\n        name={viewModel.name}\n        setName={viewModel.setName}\n        priority={viewModel.priority}\n        setPriority={viewModel.setPriority}\n        release={viewModel.release}\n        setRelease={viewModel.setRelease}\n        addTask={viewModel.addTask}\n      />\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n        spacing={5}\n        style={gridStyles}\n      >\n        <Grid key=\"0\" item>\n          <TaskList header={HEADERS.TO_DO_HEADER} tasks={viewModel.tasks} />\n        </Grid>\n        <Grid key=\"1\" item>\n          <TaskList header={HEADERS.IN_ANALYSIS_HEADER} />\n        </Grid>\n        <Grid key=\"2\" item>\n          <TaskList header={HEADERS.IN_DEVELOPMENT_HEADER} />\n        </Grid>\n        <Grid key=\"3\" item>\n          <TaskList header={HEADERS.IN_TESTING_HEADER} />\n        </Grid>\n        <Grid key=\"4\" item>\n          <TaskList header={HEADERS.DONE_HEADER} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nDashboardPageView.propTypes = {\n  viewModel: PropTypes.shape({\n    name: PropTypes.string,\n    setName: PropTypes.func,\n    priority: PropTypes.string,\n    setPriority: PropTypes.func,\n    release: PropTypes.string,\n    setRelease: PropTypes.func,\n    tasks: PropTypes.arrayOf(PropTypes.object),\n    addTask: PropTypes.func,\n  }),\n};\n\nDashboardPageView.defaultProps = {\n  viewModel: {\n    name: \"TBD\",\n    setName: () => {},\n    priority: \"\",\n    setPriority: () => {},\n    release: \"TBD\",\n    setRelease: () => {},\n    tasks: [\n      {\n        id: 1 + Math.random(),\n        name: \"TBD\",\n        priority: \"\",\n        release: \"TBD\",\n      },\n    ],\n    addTask: () => {},\n  },\n};\n","import \"./App.css\";\nimport WhoopsiesHeader from \"./components/UI/WhoopsiesHeader\";\nimport DashboardPageViewModel from \"./components/ViewModels/DashboardPageViewModel\";\nimport DashboardPageView from \"./components/Views/DashboardPageView\";\n\nfunction App() {\n  return (\n    <>\n      <WhoopsiesHeader />\n      <DashboardPageView viewModel={DashboardPageViewModel()} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}